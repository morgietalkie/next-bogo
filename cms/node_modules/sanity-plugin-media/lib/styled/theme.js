"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlobalStyle = void 0;
var styled_components_1 = require("styled-components");
var HEADER_ROW_HEIGHT = 50; // px
var headerRowHeight = HEADER_ROW_HEIGHT + "px";
var headerRowHeight2x = HEADER_ROW_HEIGHT * 2 + "px";
var headerRowHeight3x = HEADER_ROW_HEIGHT * 3 + "px";
var tableHeaderHeight = '34px';
var tableRowHeight = ['115px', '100px'];
var sizes = [];
sizes.headerRowHeight = headerRowHeight;
sizes.headerRowHeight2x = headerRowHeight2x;
sizes.headerRowHeight3x = headerRowHeight3x;
sizes.tableHeaderHeight = tableHeaderHeight;
sizes.tableRowHeight = tableRowHeight;
var space = [
    '0.0rem',
    '0.3rem',
    '0.6rem',
    '1.2rem',
    '2.4rem',
    '4.8rem'
];
space.headerRowHeight = headerRowHeight;
space.headerRowHeight2x = headerRowHeight2x;
space.headerRowHeight3x = headerRowHeight3x;
space.tableHeaderHeight = tableHeaderHeight;
space.tableRowHeight = tableRowHeight;
var theme = {
    // Remember that em units in media queries are always relative to 16px / the user setting
    // and NOT the html font size!
    borders: {},
    breakpoints: ['55em'],
    colors: {
        // grayscale
        white: '#FFFFFF',
        lighterGray: '#CCCCCC',
        lightGray: '#999',
        gray: '#555',
        darkGray: '#303030',
        darkerGray: '#222',
        darkestGray: '#1C1C1C',
        black: '#000',
        // colors
        red: '#F03E31',
        // alpha
        overlayCard: 'rgba(255, 255, 255, 0.075)',
        overlayTableRow: 'rgba(255, 255, 255, 0.035)'
    },
    gridTemplateColumns: {
        tableSmall: '8rem auto 1.5rem',
        tableLarge: '6rem auto 5.5rem 2.75rem 3.5rem 8.5rem 2rem'
    },
    fonts: {
        default: "-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif"
    },
    fontSizes: ['10px', '12px', '14px'],
    sizes: sizes,
    space: space,
    tableRowHeight: tableRowHeight,
    /*
      We have two z-index values for the app wrapper:
      - 'appInline' (when selecting an image within a document)
      - 'appTool' (if you click the media plugin from the navbar).
  
      When this plugin is invoked in an 'inline' context, it's always displayed fullscreen and we need to make sure it
      sits above any popover (since it's possible for the plugin to be invoked from such - e.g. a nested object in an array)
  
      When the plugin is invoked as a tool, the navbar is always visible and we need to make sure it sits underneath, to allow
      navbar specific dropdowns to display correctly.
  
      Sanity's z-index values:
      https://github.com/sanity-io/sanity/blob/next/packages/%40sanity/base/src/styles/variables/layers.css
    */
    zIndices: {
        modal: 1081,
        appInline: 1080,
        appTool: 900,
        header: 1
    }
};
exports.GlobalStyle = styled_components_1.createGlobalStyle(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  /* Custom scrollbar for the react-window and dialog viewports */\n  .custom-scrollbar {\n    ::-webkit-scrollbar {\n      width: 14px;\n      height: 14px;\n    }\n    ::-webkit-scrollbar-button {\n      width: 0px;\n      height: 0px;\n    }\n    ::-webkit-scrollbar-thumb {\n      background: ", ";\n      border: none;\n      border-radius: 0px;\n    }\n    ::-webkit-scrollbar-thumb:hover {\n      background: ", ";\n    }\n    ::-webkit-scrollbar-track {\n      background: ", ";\n      border: none;\n      border-radius: 0px;\n    }\n  }\n\n  /* Revert normalize.css' font-family changes */\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit;\n  }\n"], ["\n  /* Custom scrollbar for the react-window and dialog viewports */\n  .custom-scrollbar {\n    ::-webkit-scrollbar {\n      width: 14px;\n      height: 14px;\n    }\n    ::-webkit-scrollbar-button {\n      width: 0px;\n      height: 0px;\n    }\n    ::-webkit-scrollbar-thumb {\n      background: ", ";\n      border: none;\n      border-radius: 0px;\n    }\n    ::-webkit-scrollbar-thumb:hover {\n      background: ", ";\n    }\n    ::-webkit-scrollbar-track {\n      background: ", ";\n      border: none;\n      border-radius: 0px;\n    }\n  }\n\n  /* Revert normalize.css' font-family changes */\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit;\n  }\n"])), function (props) { return props.theme.colors.darkGray; }, function (props) { return props.theme.colors.gray; }, function (props) { return props.theme.colors.darkestGray; });
exports.default = theme;
var templateObject_1;
