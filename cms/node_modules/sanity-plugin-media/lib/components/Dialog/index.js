"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var default_1 = __importDefault(require("part:@sanity/components/dialogs/default"));
var content_1 = __importDefault(require("part:@sanity/components/dialogs/content"));
var Box_1 = __importDefault(require("../Box"));
var Dialog = function (props) {
    var actions = props.actions, asset = props.asset, children = props.children, color = props.color, onClose = props.onClose, _a = props.size, size = _a === void 0 ? 'medium' : _a, title = props.title;
    var handleDialogAction = react_1.useCallback(function (action) {
        if (action.callback) {
            action.callback();
        }
    }, []);
    return (react_1.default.createElement(default_1.default, { actions: actions, className: "sanity-media-dialog", color: color, onAction: handleDialogAction, onClose: onClose, title: title },
        react_1.default.createElement(content_1.default, { size: size },
            react_1.default.createElement(Box_1.default, { display: "grid", gridGap: "1rem", gridTemplateColumns: ['none', 'max-content 1fr'] },
                react_1.default.createElement("img", { src: asset.url + "?w=200", style: { maxWidth: '200px' } }),
                children))));
};
exports.default = Dialog;
