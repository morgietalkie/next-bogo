"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAssetBrowserState = exports.AssetBrowserStateProvider = void 0;
var react_1 = __importStar(require("react"));
var react_redux_1 = require("react-redux");
var AssetBrowserStateContext = react_1.createContext(undefined);
exports.AssetBrowserStateProvider = function (props) {
    var children = props.children;
    var useSelector = react_redux_1.useSelector;
    var _a = useSelector(function (state) { return state.assets; }), allIds = _a.allIds, byIds = _a.byIds, fetchCount = _a.fetchCount, fetching = _a.fetching, fetchingError = _a.fetchingError
    // totalCount
    ;
    // TODO: correctly type redux store
    var items = allIds.map(function (id) { return byIds[id]; });
    var contextValue = {
        fetchCount: fetchCount,
        fetching: fetching,
        fetchingError: fetchingError,
        items: items
        // totalCount
    };
    return (react_1.default.createElement(AssetBrowserStateContext.Provider, { value: contextValue }, children));
};
exports.useAssetBrowserState = function () {
    var context = react_1.useContext(AssetBrowserStateContext);
    if (context === undefined) {
        throw new Error('useAssetBrowserState must be used within an AssetBrowserStateProvider');
    }
    return context;
};
exports.default = AssetBrowserStateContext;
