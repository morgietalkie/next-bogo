"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
function useKeyPress(targetKey, callback) {
    // State for keeping track of whether key is pressed
    var _a = react_1.useState(false), keyPressed = _a[0], setKeyPressed = _a[1];
    // If pressed key is our target key then set to true
    function downHandler(e) {
        if (e.key === targetKey) {
            setKeyPressed(true);
            if (callback) {
                callback();
            }
        }
    }
    // If released key is our target key then set to false
    var upHandler = function (e) {
        if (e.key === targetKey) {
            setKeyPressed(false);
        }
    };
    // Add event listeners
    react_1.useEffect(function () {
        window.addEventListener('keydown', downHandler);
        window.addEventListener('keyup', upHandler);
        // Remove event listeners on cleanup
        return function () {
            window.removeEventListener('keydown', downHandler);
            window.removeEventListener('keyup', upHandler);
        };
    }, []); // Empty array ensures that effect is only run on mount and unmount
    return keyPressed;
}
exports.default = useKeyPress;
