"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var styled_components_1 = require("styled-components");
var AssetSourceDispatchContext_1 = require("./contexts/AssetSourceDispatchContext");
var withRedux_1 = __importDefault(require("./helpers/withRedux"));
var Browser_1 = __importDefault(require("./components/Browser/Browser"));
var Dialogs_1 = __importDefault(require("./components/Dialogs/Dialogs"));
var Portal_1 = require("./components/Portal/Portal");
var Snackbars_1 = __importDefault(require("./components/Snackbars/Snackbars"));
var useKeyPress_1 = __importDefault(require("./hooks/useKeyPress"));
var Box_1 = __importDefault(require("./styled/Box"));
var theme_1 = __importStar(require("./styled/theme"));
var HEADER_HEIGHT = '48px';
var AssetBrowser = function (props) {
    var onClose = props.onClose, onSelect = props.onSelect, selectedAssets = props.selectedAssets, tool = props.tool;
    // Close on escape key press
    useKeyPress_1.default('Escape', onClose);
    react_1.useLayoutEffect(function () {
        /**
         * HACK: Hide overflow on parent dialog content container.
         * This is done because:
         * 1. On iOS, visible `overflow` and `-webkit-overflow-scrolling: touch` causes nested elements with
         * fixed positiong (the media browser) to crop oddly, as if it's being masked.
         * 2. We don't require visible overflow in the media browser anyway, as that's all delegated to `react-window`
         */
        var dialogContentEl = window.document.querySelector('[class^=DefaultDialog_content]');
        if (dialogContentEl instanceof HTMLElement) {
            dialogContentEl.style.overflow = 'hidden';
        }
        // HACK: Revert overflow on parent dialog content container.
        return function () {
            if (dialogContentEl instanceof HTMLElement) {
                dialogContentEl.style.overflow = 'auto';
            }
        };
    }, []);
    react_1.useEffect(function () {
        // Scroll to top if browser is being used as a tool.
        // We do this as we lock body scroll when the plugin is active, and due to overscroll
        // on mobile devices, the menu may not always be positioned at the top of the page.
        if (tool) {
            window.scrollTo(0, 0);
        }
        // Diable scrolling on the body element whilst the plugin is active, re-enable on close
        // Note that this has no effect on iOS < 13
        window.document.body.style.overflow = 'hidden';
        return function () {
            window.document.body.style.overflow = 'auto';
        };
    }, []);
    // Stop propagation and prevent document mouse events from firing.
    // This is a bit of a hack to make this work with `editModal = 'popover'` and prevent Sanity's <Popover /> component from
    // prematurely closing, as it attaches events on `document` to detect outside clicks.
    var handleStopPropagation = function (e) {
        e.nativeEvent.stopImmediatePropagation();
    };
    // TODO: preload selectedAssets in redux store rather than prop drilling
    return (react_1.default.createElement(styled_components_1.ThemeProvider, { theme: theme_1.default },
        react_1.default.createElement(AssetSourceDispatchContext_1.AssetBrowserDispatchProvider, { onSelect: onSelect },
            react_1.default.createElement(Portal_1.Portal, null,
                react_1.default.createElement(theme_1.GlobalStyle, null),
                react_1.default.createElement(Box_1.default, { bottom: 0, fontFamily: "default", height: "auto", left: 0, onMouseUp: handleStopPropagation, position: "fixed", width: "100%", top: tool ? HEADER_HEIGHT : 0, zIndex: tool ? 'appTool' : 'appInline' },
                    react_1.default.createElement(Snackbars_1.default, null),
                    react_1.default.createElement(Dialogs_1.default, null),
                    react_1.default.createElement(Browser_1.default, { onClose: onClose, selectedAssets: selectedAssets }))))));
};
exports.default = withRedux_1.default(AssetBrowser);
