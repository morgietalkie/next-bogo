{"version":3,"file":"react-nprogress.cjs.production.js","sources":["../compiled/timeout.js","../compiled/clamp.js","../compiled/increment.js","../compiled/queue.js","../compiled/useNProgress.js","../compiled/NProgress.js","../compiled/withNProgress.js"],"sourcesContent":["let handle;\nexport const cancel = () => {\n    if (handle) {\n        window.cancelAnimationFrame(handle);\n    }\n};\nexport const timeout = (callback, delay) => {\n    let deltaTime;\n    let start;\n    const frame = time => {\n        start = start || time;\n        deltaTime = time - start;\n        if (deltaTime > delay) {\n            callback();\n            return;\n        }\n        handle = window.requestAnimationFrame(frame);\n    };\n    handle = window.requestAnimationFrame(frame);\n};\n","export const clamp = (num, lower, upper) => {\n    num = num <= upper ? num : upper;\n    num = num >= lower ? num : lower;\n    return num;\n};\n","import { clamp } from './clamp';\nexport const increment = (progress) => {\n    let amount = 0;\n    if (progress >= 0 && progress < 0.2) {\n        amount = 0.1;\n    }\n    else if (progress >= 0.2 && progress < 0.5) {\n        amount = 0.04;\n    }\n    else if (progress >= 0.5 && progress < 0.8) {\n        amount = 0.02;\n    }\n    else if (progress >= 0.8 && progress < 0.99) {\n        amount = 0.005;\n    }\n    return clamp(progress + amount, 0, 0.994);\n};\n","let isRunning = false;\nlet pending = [];\nconst next = () => {\n    isRunning = true;\n    const cb = pending.shift();\n    if (cb) {\n        return cb(next);\n    }\n    isRunning = false;\n};\nexport const clear = () => {\n    isRunning = false;\n    pending = [];\n};\nexport const queue = (cb) => {\n    pending.push(cb);\n    if (!isRunning && pending.length === 1) {\n        next();\n    }\n};\n","import { useEffect, useRef } from 'react';\nimport { useEffectOnce, useGetSetState, useUpdateEffect } from 'react-use';\nimport { clamp } from './clamp';\nimport { increment } from './increment';\nimport { clear as clearQueue, queue } from './queue';\nimport { cancel as cancelCurrentTimeout, timeout } from './timeout';\n/* istanbul ignore next */\nconst noop = () => undefined;\nconst initialState = {\n    isFinished: false,\n    progress: 0,\n    sideEffect: noop\n};\nconst cleanup = () => {\n    cancelCurrentTimeout();\n    clearQueue();\n};\nexport const useNProgress = ({ animationDuration = 200, incrementDuration = 800, isAnimating = false, minimum = 0.08 } = {}) => {\n    const [get, setState] = useGetSetState(initialState);\n    const set = (n) => {\n        n = clamp(n, minimum, 1);\n        if (n === 1) {\n            cleanup();\n            queue(next => {\n                setState({\n                    progress: n,\n                    sideEffect: () => timeout(next, animationDuration)\n                });\n            });\n            queue(() => {\n                setState({ isFinished: true, sideEffect: cleanup });\n            });\n            return;\n        }\n        queue(next => {\n            setState({\n                progress: n,\n                sideEffect: () => timeout(next, animationDuration)\n            });\n        });\n    };\n    const trickle = () => {\n        set(increment(get().progress));\n    };\n    const start = () => {\n        const work = () => {\n            trickle();\n            queue(next => {\n                timeout(() => {\n                    work();\n                    next();\n                }, incrementDuration);\n            });\n        };\n        work();\n    };\n    const savedTrickle = useRef(noop);\n    useEffect(() => {\n        savedTrickle.current = trickle;\n    });\n    useEffectOnce(() => {\n        if (isAnimating) {\n            start();\n        }\n        return cleanup;\n    });\n    useUpdateEffect(() => {\n        get().sideEffect();\n    }, [get().sideEffect]);\n    useUpdateEffect(() => {\n        if (!isAnimating) {\n            set(1);\n        }\n        else {\n            setState({\n                ...initialState,\n                sideEffect: start\n            });\n        }\n    }, [isAnimating]);\n    return {\n        animationDuration,\n        isFinished: get().isFinished,\n        progress: get().progress\n    };\n};\n","import { useNProgress } from './useNProgress';\nexport const NProgress = ({ children, ...restProps }) => {\n    const renderProps = useNProgress(restProps);\n    return children(renderProps);\n};\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { useNProgress } from './useNProgress';\nexport function withNProgress(BaseComponent) {\n    const WithNProgress = props => {\n        const hookProps = useNProgress(props);\n        return React.createElement(BaseComponent, Object.assign({}, props, hookProps));\n    };\n    hoistNonReactStatics(WithNProgress, BaseComponent);\n    return WithNProgress;\n}\n"],"names":["handle","clamp","num","lower","upper","increment","progress","amount","isRunning","pending","next","cb","shift","clear","queue","push","length","cancel","window","cancelAnimationFrame","timeout","callback","delay","start","requestAnimationFrame","frame","time","noop","initialState","isFinished","sideEffect","cleanup","cancelCurrentTimeout","clearQueue","useNProgress","animationDuration","incrementDuration","isAnimating","minimum","useGetSetState","get","setState","set","n","trickle","work","savedTrickle","useRef","useEffect","current","useEffectOnce","useUpdateEffect","NProgress","children","restProps","withNProgress","BaseComponent","WithNProgress","props","hookProps","React","Object","assign","hoistNonReactStatics"],"mappings":"4JAAIA,uTCASC,MAAQ,SAACC,EAAKC,EAAOC,UAE9BF,GADAA,EAAMA,GAAOE,EAAQF,EAAME,IACdD,EAAQD,EAAMC,GCDlBE,UAAY,SAACC,OAClBC,EAAS,SACTD,GAAY,GAAKA,EAAW,GAC5BC,EAAS,GAEJD,GAAY,IAAOA,EAAW,GACnCC,EAAS,IAEJD,GAAY,IAAOA,EAAW,GACnCC,EAAS,IAEJD,GAAY,IAAOA,EAAW,MACnCC,EAAS,MAENN,MAAMK,EAAWC,EAAQ,EAAG,OCfnCC,WAAY,EACZC,QAAU,GACRC,KAAO,SAAPA,IACFF,WAAY,MACNG,EAAKF,QAAQG,WACfD,SACOA,EAAGD,GAEdF,WAAY,GAEHK,MAAQ,WACjBL,WAAY,EACZC,QAAU,IAEDK,MAAQ,SAACH,GAClBF,QAAQM,KAAKJ,GACRH,WAAgC,IAAnBC,QAAQO,QACtBN,QHhBKO,OAAS,WACdjB,QACAkB,OAAOC,qBAAqBnB,SAGvBoB,QAAU,SAACC,EAAUC,OAE1BC,EAUJvB,OAASkB,OAAOM,sBATF,SAARC,EAAQC,GAEEA,GADZH,EAAQA,GAASG,GAEDJ,EACZD,IAGJrB,OAASkB,OAAOM,sBAAsBC,MITxCE,KAAO,aACPC,aAAe,CACjBC,YAAY,EACZvB,SAAU,EACVwB,WAAYH,MAEVI,QAAU,WACZC,SACAC,SAESC,aAAe,6BAA6F,SAA1FC,kBAAAA,aAAoB,UAAKC,kBAAAA,aAAoB,UAAKC,YAAAA,oBAAqBC,QAAAA,aAAU,QACpFC,wBAAeX,cAAhCY,OAAKC,OACNC,EAAM,SAACC,MAEC,KADVA,EAAI1C,MAAM0C,EAAGL,EAAS,WAElBP,UACAjB,MAAM,SAAAJ,GACF+B,EAAS,CACLnC,SAAUqC,EACVb,WAAY,kBAAMV,QAAQV,EAAMyB,aAGxCrB,MAAM,WACF2B,EAAS,CAAEZ,YAAY,EAAMC,WAAYC,YAIjDjB,MAAM,SAAAJ,GACF+B,EAAS,CACLnC,SAAUqC,EACVb,WAAY,kBAAMV,QAAQV,EAAMyB,SAItCS,EAAU,WACZF,EAAIrC,UAAUmC,IAAMlC,YAElBiB,EAAQ,YACG,SAAPsB,IACFD,IACA9B,MAAM,SAAAJ,GACFU,QAAQ,WACJyB,IACAnC,KACD0B,KAGXS,IAEEC,EAAeC,aAAOpB,aAC5BqB,gBAAU,WACNF,EAAaG,QAAUL,IAE3BM,uBAAc,kBACNb,GACAd,IAEGQ,UAEXoB,yBAAgB,WACZX,IAAMV,cACP,CAACU,IAAMV,aACVqB,yBAAgB,WACPd,EAIDI,cACOb,cACHE,WAAYP,KALhBmB,EAAI,IAQT,CAACL,IACG,CACHF,kBAAAA,EACAN,WAAYW,IAAMX,WAClBvB,SAAUkC,IAAMlC,WClFX8C,UAAY,gBAAGC,IAAAA,SAAaC,uDAE9BD,EADanB,aAAaoB,KCC9B,SAASC,cAAcC,OACpBC,EAAgB,SAAAC,OACZC,EAAYzB,aAAawB,UACxBE,oBAAoBJ,EAAeK,OAAOC,OAAO,GAAIJ,EAAOC,YAEvEI,qBAAqBN,EAAeD,GAC7BC"}